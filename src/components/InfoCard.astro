---
import { colorMap, type ColorKey } from "../utils/constants";

export interface InfoCardData {
    label?: string;
    title: string;
    detail?: string;
    color?: ColorKey;
    link?: string;
}

const {
    label,
    title,
    detail,
    link,
    color = "gray",
} = Astro.props as InfoCardData;

const resolvedColor = colorMap[color as ColorKey] ?? "#E5E7EB";

const RootTag = link ? "a" : "div";
const rootProps = link
    ? { href: link, target: "_blank", rel: "noopener noreferrer" }
    : {};
---

<RootTag
    {...rootProps}
    class={`group relative block rounded-xl overflow-hidden bg-neutral-50 dark:bg-neutral-800 shadow-md dark:shadow-none dark:ring-1 dark:ring-neutral-700 ${
        link
            ? "cursor-pointer transition transform hover:scale-[1.01] hover:opacity-95 hover:shadow-lg dark:hover:bg-neutral-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-[var(--bg-color)]"
            : ""
    }`}
    style={`--bg-color:${resolvedColor}`}
    aria-label={link ? "View publication" : undefined}
>
    <div class="h-3 w-full" style={`background-color: ${resolvedColor}`}></div>
    <div class="p-4">
        {
            label && (
                <h4 class="text-sm font-bold uppercase mb-1 text-neutral-500 dark:text-neutral-300">
                    {label}
                </h4>
            )
        }
        <h3 class="text-base font-semibold mb-1 font-sans">{title}</h3>
        {
            detail && (
                <p class="font-light text-neutral-600 dark:text-neutral-300">
                    {detail}
                </p>
            )
        }
    </div>

    {
        link && (
            <span
                class="pointer-events-none absolute bottom-2 left-1/2 -translate-x-1/2 rounded px-2 py-1 text-xs text-white opacity-0 transition group-hover:opacity-100"
                style="background-color: var(--bg-color)"
            >
                View publication
            </span>
        )
    }
</RootTag>
